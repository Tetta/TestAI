name: Apply file blocks from Issue -> MAIN

on:
  issues:
    types: [opened, edited, labeled]
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  apply-to-main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Extract code blocks
        id: extract
        shell: bash
        run: |
          set -euo pipefail
          BODY=$(jq -r '.comment.body // .issue.body // ""' "$GITHUB_EVENT_PATH")
          printf '%s\n' "$BODY" > body.txt

          # Ищем блоки вида:
          # ```file:RELATIVE/PATH
          # <содержимое>
          # ```
          awk '
            BEGIN {inb=0; idx=0}
            /^```/ {
              if (!inb) {
                if (match($0, /^```file:([^\r\n]+)$/, m)) {
                  inb=1; path=m[1]; idx++; printf "%s\n", path > sprintf("path%03d.txt", idx); next
                } else { next }
              } else { inb=0; next }
            }
            { if (inb) print > sprintf("data%03d.txt", idx) }
          ' body.txt

          count=$(ls -1 data*.txt 2>/dev/null | wc -l | tr -d " ")
          echo "found=$count" >> $GITHUB_OUTPUT
          echo "Found $count file-block(s)."
          # если не нашли — просто выходим без ошибки
          if [ "$count" = "0" ]; then
            echo "No file blocks in this event."
            exit 0
          fi

      - name: Apply non-workflow files (GITHUB_TOKEN)
        if: steps.extract.outputs.found != '0'
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "agent-bot"
          git config user.email "agent@users.noreply.github.com"

          changed=0
          for p in path*.txt; do
            idx=${p##path}; idx=${idx%%.txt}
            path=$(sed 's/\r$//' "path${idx}.txt")
            if [[ "$path" == .github/workflows/* ]]; then
              continue
            fi
            mkdir -p "$(dirname "$path")"
            cp "data${idx}.txt" "$path"
            echo "Wrote $path"
            git add "$path"
            changed=1
          done

          if [[ "$changed" -eq 1 ]]; then
            git commit -m "chore(agent): apply file blocks (non-workflows)"
            git push origin HEAD:main
          else
            echo "No non-workflow files to push."
          fi

 - name: Apply workflow files (PAT with workflow scope)
        env:
          OWNER: ${{ github.repository_owner }}
          REPO:  ${{ github.event.repository.name }}
          PAT:   ${{ secrets.WORKFLOW_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "${PAT:-}" ]]; then
            echo "WORKFLOW_TOKEN not set; skipping .github/workflows/* updates."
            exit 0
          fi

          changed=0
          for p in path*.txt; do
            idx=${p##path}; idx=${idx%%.txt}
            path=$(tr -d '\r' < "path${idx}.txt")
            if [[ "$path" == .github/workflows/* ]]; then
              mkdir -p "$(dirname "$path")"
              cp "data${idx}.txt" "$path"
              echo "Wrote workflow file: [$path]"
              git add "$path"
              changed=1
            fi
          done

          if [[ "$changed" -eq 1 ]]; then
            git config user.name  "agent-bot"
            git config user.email "agent@users.noreply.github.com"
            git commit -m "chore(agent): apply workflow files from issue"
            git push "https://x-access-token:${PAT}@github.com/${OWNER}/${REPO}.git" HEAD:main
          else
            echo "No workflow files found to push with PAT."
          fi