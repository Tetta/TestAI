name: Apply file blocks from Issue -> MAIN

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  apply:
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}
      REPO:  ${{ github.event.repository.name }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      # Парсим комментарий/issue телом: ищем блоки ```file:relative/path\n<content>\n```
      - name: Extract file blocks
        id: extract
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = (context.payload.comment?.body || context.payload.issue?.body || '').replace(/\r\n/g, '\n');
            const re = /```file:\s*([^\n]+)\n([\s\S]*?)```/g;
            let i = 0, m;
            while ((m = re.exec(body)) !== null) {
              i++;
              fs.writeFileSync(`path${String(i).padStart(3,'0')}.txt`, m[1].trim());
              fs.writeFileSync(`data${String(i).padStart(3,'0')}.txt`, m[2]);
            }
            core.setOutput('found', String(i));

      - name: Apply non-workflow files (GITHUB_TOKEN)
        if: steps.extract.outputs.found != '0'
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "agent-bot"
          git config user.email "agent@users.noreply.github.com"

          changed=0
          for p in path*.txt; do
            i=${p##path}; i=${i%%.txt}
            path=$(cat "path${i}.txt")
            case "$path" in
              .github/workflows/*) continue ;;
            esac
            mkdir -p "$(dirname "$path")"
            cp "data${i}.txt" "$path"
            echo "Wrote $path"
            git add "$path"
            changed=1
          done

          if [ "$changed" = "1" ]; then
            git commit -m "chore(agent): apply non-workflow files from issue"
            git push origin HEAD:main
          else
            echo "No non-workflow files to push."
          fi

      - name: Apply workflow files (via GitHub API with PAT)
        if: steps.extract.outputs.found != '0'
        env:
          OWNER: ${{ github.repository_owner }}
          REPO:  ${{ github.event.repository.name }}
          PAT:   ${{ secrets.WORKFLOW_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "${PAT:-}" ]; then
            echo "WORKFLOW_TOKEN not set; skipping workflow updates."
            exit 0
          fi

          changed=0

          for p in path*.txt; do
            i=${p##path}; i=${i%%.txt}
            path=$(cat "path${i}.txt")
            case "$path" in
              .github/workflows/*)
                data_file="data${i}.txt"
                # base64 без переносов строк
                content_b64=$(base64 -w 0 "$data_file")

                # Узнаём, есть ли файл уже в main (чтобы передать sha при update)
                api="https://api.github.com/repos/${OWNER}/${REPO}/contents/${path}?ref=main"
                status=$(curl -sS -o resp.json -w "%{http_code}" -H "Authorization: Bearer ${PAT}" -H "Accept: application/vnd.github+json" "$api")
                sha=""
                if [ "$status" = "200" ]; then
                  sha=$(jq -r '.sha' resp.json)
                fi

                # Создаём/обновляем файл через Contents API
                payload=$(jq -n \
                  --arg msg "chore(agent): apply workflow file from issue" \
                  --arg content "$content_b64" \
                  --arg branch "main" \
                  --arg sha "$sha" \
                  '{message:$msg, content:$content, branch:$branch} + ( $sha|length>0 ? {sha:$sha} : {} )')

                put_status=$(curl -sS -o put.json -w "%{http_code}" \
                  -X PUT \
                  -H "Authorization: Bearer ${PAT}" \
                  -H "Accept: application/vnd.github+json" \
                  -H "Content-Type: application/json" \
                  -d "$payload" \
                  "https://api.github.com/repos/${OWNER}/${REPO}/contents/${path}")

                if [ "$put_status" != "201" ] && [ "$put_status" != "200" ]; then
                  echo "API error while writing ${path}: HTTP ${put_status}"
                  cat put.json || true
                  exit 1
                fi

                echo "Uploaded workflow via API: ${path} (HTTP ${put_status})"
                changed=1
                ;;
            esac
          done

          if [ "$changed" = "0" ]; then
            echo "No workflow files to upload."
          fi